name: Continuous Integration
on: [push, pull_request]
jobs:
  build:
    name: Build (${{matrix.config}})
    runs-on: windows-2022
    steps:
      - name: Fetch code-signing key
        id: fetchKey
        env:
          CODE_SIGNING_PFX_BASE64: ${{ secrets.CODE_SIGNING_KEY_PFX_BASE64 }}
        if: ${{ (github.repository == 'fredemmott/hand-tracked-cockpit-clicking') && (github.event_name == 'push')}}
        run: |
          $pfxPath="${{runner.temp}}/MyCert.pfx"
          [System.Convert]::FromBase64String($Env:CODE_SIGNING_PFX_BASE64) | Set-Content $pfxPath -AsByteStream
          Add-Content $Env:GITHUB_OUTPUT "HAVE_KEY=true"
          Add-Content $Env:GITHUB_OUTPUT "PATH=$pfxPath"
      - uses: actions/checkout@v2
        with:
          path: source
          fetch-depth: 0
      - name: Make build directory
        run: cmake -E make_directory build
      - name: Configure
        working-directory: build
        shell: pwsh
        run: |
          $args = @(
            "-DGITHUB_REF_TYPE=${{github.ref_type}}",
            "-DGITHUB_REF_NAME=${{github.ref_name}}"
          )
          if ("${{steps.fetchKey.outputs.HAVE_KEY}}" -eq "true") {
            $args += "-DSIGNTOOL_KEY_ARGS=/f;${{steps.fetchKey.outputs.PATH}}"
          }
          cmake ${{github.workspace}}/source @args
      - name: Compile
        working-directory: build
        run: |
          cmake --build . `
            --config ${{matrix.config}} `
            --parallel `
            -- `
            /p:CL_MPCount=
      - name: Install files
        working-directory: build
        id: build
        run: |
          cmake --install . `
            --config ${{matrix.config}} `
            --prefix install-prefix `
            --component Default
          $version="$(Get-Content version.txt)"
          Add-Content $Env:GITHUB_OUTPUT "VERSION=${version}"
      - name: Attach binaries to build
        if: ${{matrix.config != 'Debug' }}
        uses: actions/upload-artifact@v2
        with:
          name: HandTrackedCockpitClicking-GHA-${{github.run_number}}-Binaries
          path: build/install-prefix/**
      - name: Install debug symbols
        working-directory: build
        run: |
          cmake --install . `
            --config ${{matrix.config}} `
            --prefix symbols `
            --component DebugSymbols
      - name: Attach debug symbols to build
        if: ${{matrix.config != 'Debug' }}
        uses: actions/upload-artifact@v2
        with:
          name: HandTrackedCockpitClicking-GHA-${{github.run_number}}-Symbols
          path: build/symbols/*.pdb
      - name: Create MSI
        id: installer
        working-directory: build
        run: |
          # Create MSI
          echo "::group::Build 'package' target"
          cmake --build . `
            --config ${{matrix.config}} `
            --target package
          echo "::endgroup::"
          echo "::group::WiX debug log"
          Get-Content _CPack_Packages/win64/WIX/wix.log
          echo "::endgroup::"
          $version="${{steps.build.outputs.VERSION}}"
          $installer="Hand Tracked Cockpit Clicking v${version}.msi"
          $installerPath=(Get-ChildItem "${installer}").FullName
          echo "File name: ${installer}"
          echo "File path: ${installerPath}"
          Add-Content $Env:GITHUB_OUTPUT "NAME=${installer}"
          Add-Content $Env:GITHUB_OUTPUT "PATH=${installerPath}"
      - name: Sign MSI
        working-directory: build
        if: ${{steps.fetchKey.outputs.HAVE_KEY}}
        run: |
            # Sign MSI
            # Known path for the GitHub Actions windows 2022 runner, may need updating
            & 'C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x86\signtool.exe' `
              sign `
              /t http://timestamp.digicert.com `
              /fd SHA256 `
              /f "${{steps.fetchKey.outputs.PATH}}" `
              "${{steps.installer.outputs.PATH}}"
      - name: Attach installer to build
        if: ${{matrix.config != 'Debug' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{steps.installer.outputs.NAME}}
          path: ${{steps.installer.outputs.PATH}}
    strategy:
      matrix:
        config: [RelWithDebInfo, Debug]
