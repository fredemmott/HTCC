<Window
  x:Class="HTCCSettings.MainWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d"
  x:DefaultBindMode="TwoWay">
  <Grid RowDefinitions="Auto,*"
        x:Name="RootGrid">
    <Border x:Name="AppTitleBar"
            Grid.Row="0"
            VerticalAlignment="Top"
            Background="{StaticResource WindowCaptionBackground}"
            Height="32">
      <TextBlock Text="HTCC Settings"
                 VerticalAlignment="Center"
                 Margin="8,0,0,0"
                 Style="{StaticResource CaptionTextBlockStyle}"/>
    </Border>
    <ScrollViewer
      Grid.Row="1"
      Background="{ThemeResource SystemChromeMediumLowColor}">
      <StackPanel
        Orientation="Vertical"
        Margin="12"
        Spacing="12"
        Padding="8">
        <!-- GENERAL SETTINGS -->
        <StackPanel
          Orientation="Vertical"
          Spacing="12"
          Padding="8"
          Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
          BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
          CornerRadius="4"
          BorderThickness="1">
          <ToggleSwitch
            Header="Enable HTCC:"
            OnContent="HTCC is enabled"
            OffContent="HTCC is fully disabled in all games"
            IsOn="{x:Bind IsEnabled}"/>
          <ComboBox
            Header="Hand tracking device:"
            SelectedIndex="{x:Bind PointerSource}">
            <x:String>OpenXR hand tracking</x:String>
            <x:String>PointCTRL</x:String>
          </ComboBox>
          <ToggleSwitch
            Header="OpenXR hand tracking hibernation gesture:"
            OnContent="HTCC will recognize the gesture"
            OffContent="HTCC never hibernates"
            IsOn="{x:Bind IsHibernationGestureEnabled}"
            IsEnabled="{x:Bind IsPointerSourceOpenXRHandTracking, Mode=OneWay}"/>
          <ComboBox
            Header="Prefered game interface:"
            SelectedIndex="{x:Bind PointerSink}">
            <x:String>Virtual touch screen or tablet</x:String>
            <x:String>Virtual Oculus Touch VR controller</x:String>
          </ComboBox>
        </StackPanel>
        <!-- XR_FB_hand_tracking_aim Settings -->
        <TextBlock
          Text="Gestures"
          Style="{StaticResource SubtitleTextBlockStyle}"/>
        <StackPanel
          Orientation="Vertical"
          Spacing="12"
          Padding="8"
          Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
          BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
          CornerRadius="4"
          BorderThickness="1">
          <TextBlock Style="{StaticResource BodyTextBlockStyle}">
            Gestures require the XR_FB_hand_tracking_aim extension, which is currently available
            on Quest headsets via Link/AirLink if developer mode and developer link features are
            enabled, or on Ultraleap Gemini v5.16 and above.
          </TextBlock>
          <ToggleSwitch
            Header="Pinch to click:"
            OnContent="Enabled"
            OffContent="Disabled"
            IsOn="{x:Bind PinchToClick}"/>
          <ToggleSwitch
            Header="Pinch to scroll:"
            OnContent="Enabled"
            OffContent="Disabled"
            IsOn="{x:Bind PinchToScroll}"/>
        </StackPanel>
        <!-- PointCTRL -->
        <Grid
          ColumnDefinitions="*,Auto">
          <TextBlock
            Grid.Column="0"
            Text="PointCTRL"
            Style="{StaticResource SubtitleTextBlockStyle}"
            VerticalAlignment="Center"/>
          <Button
            Grid.Column="1"
            Content="Calibrate"
            VerticalAlignment="Center"
            Click="OnPointCtrlCalibrateClick"/>
        </Grid>
        <StackPanel
          Orientation="Vertical"
          Spacing="12"
          Padding="8"
          Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
          BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
          CornerRadius="4"
          BorderThickness="1">
          <ComboBox
            x:Name="FCUMapping"
            Header="FCU button mapping:"
            SelectedIndex="{x:Bind PointCtrlFCUMapping}">
            <x:String>Disabled</x:String>
            <x:String>Classic</x:String>
            <x:String>Modal</x:String>
            <x:String>Modal with left button lock</x:String>
            <!-- removed at runtime unless it's set -->
            <x:String>UNSUPPORTED: dedicated wheel up and down buttons</x:String>
          </ComboBox>
        </StackPanel>
        <!-- Workarounds -->
        <TextBlock
          Text="Workarounds"
          Style="{StaticResource SubtitleTextBlockStyle}"/>
        <StackPanel
          Orientation="Vertical"
          Spacing="12"
          Padding="8"
          Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
          BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
          CornerRadius="4"
          BorderThickness="1">
          <ToggleSwitch
            Header="Ignore XR_FB_hand_tracking_aim pose:"
            OnContent="A finger joint pose is used instead"
            OffContent="XR_FB_hand_tracking_aim's pose is used if available"
            IsOn="{x:Bind DisableAimPointFB}"/>
          <TextBlock Style="{StaticResource BodyTextBlockStyle}">
            Some hand tracking drivers do not report that hand tracking features are supported;
            it may be possible to enable HTCC in these cases with the options below. If the
            features do not actually work, it may crash the game or cause other problems.
          </TextBlock>
          <ToggleSwitch
            Header="Force-enable XR_EXT_hand_tracking:"
            OnContent="XR_EXT_hand_tracking is always assumed to be usable"
            OffContent="XR_EXT_hand_tracking will be used if detected"
            IsOn="{x:Bind ForceXRExtHandTracking}"/>
          <ToggleSwitch
            Header="Force-enable XR_FB_hand_tracking_aim:"
            OnContent="XR_FB_hand_tracking_aim is always assumed to be usable"
            OffContent="XR_FB_hand_tracking_aim will be used if detected"
            IsOn="{x:Bind ForceXRFBHandTrackingAim}"/>
        </StackPanel>
        <!-- VERSION INFO -->
        <Grid ColumnDefinitions="Auto,*,Auto,Auto">
          <FontIcon
            Grid.Column="0"
            Glyph="&#xE74C;"
            FontFamily="{StaticResource SymbolThemeFontFamily}"
            Margin="0,0,12,0"
            VerticalAlignment="Center"/>
          <TextBlock
            Grid.Column="1"
            Text="About HTCC"
            Style="{StaticResource SubtitleTextBlockStyle}"
            VerticalAlignment="Center"/>
          <Button
            Grid.Column="2"
            Content="Copy"
            Click="OnCopyVersionDataClick"
            VerticalAlignment="Center"
            Margin="0,0,8,0"/>
          <Button
            Grid.Column="3"
            Click="OnSponsorClick">
            <Grid ColumnDefinitions="Auto,Auto">
              <FontIcon
                Grid.Column="0"
                Glyph="&#xEB51;"
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                Foreground="#db61a2"/>
              <TextBlock Grid.Column="1"
                         Margin="8,0,0,0">
                Support HTCC
              </TextBlock>
            </Grid>
          </Button>
        </Grid>
        <Grid
          RowDefinitions="Auto,Auto"
          Padding="8"
          Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
          BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
          CornerRadius="4"
          BorderThickness="1">
          <TextBlock
            Grid.Row="0"
            x:Name="VersionText"
            Style="{ThemeResource BodyTextBlockStyle}"
            IsTextSelectionEnabled="true"/>
        </Grid>
      </StackPanel>
    </ScrollViewer>
  </Grid>
</Window>
